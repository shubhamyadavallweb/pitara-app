name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set environment variables
      working-directory: 'Pitara Mobile Application Frontend'
      run: |
        echo "VITE_GOOGLE_ANDROID_CLIENT_ID=1089697091920-0b2qntimau4d59chhqouu6i8j4u1e6oi.apps.googleusercontent.com" >> .env
        echo "VITE_GOOGLE_WEB_CLIENT_ID=1089697091920-98q7tp993p275ms9dbms9iodu5lh8rnp.apps.googleusercontent.com" >> .env

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        # caching disabled to prevent errors due to missing package-lock.json in the specified directory
        
    - name: Clear npm cache
      working-directory: 'Pitara Mobile Application Frontend'
      run: npm cache clean --force
        
    - name: Install Dependencies
      working-directory: 'Pitara Mobile Application Frontend'
      run: npm install --no-audit --prefer-offline --legacy-peer-deps
        
    - name: Build Web App
      working-directory: 'Pitara Mobile Application Frontend'
      run: npm run build
        
    - name: Remove and recreate android directory
      working-directory: 'Pitara Mobile Application Frontend'
      run: rm -rf android
        
    - name: Sync Capacitor
      working-directory: 'Pitara Mobile Application Frontend'
      run: npx cap add android && npx cap sync android
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build Debug APK
      working-directory: 'Pitara Mobile Application Frontend/android'
      run: |
        chmod +x gradlew
        ./gradlew assembleDebug --no-daemon
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: pitara-universal-apk
        path: 'Pitara Mobile Application Frontend/android/app/build/outputs/apk/debug/*.apk' 